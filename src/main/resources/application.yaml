spring:
  servlet:
    multipart:
      max-request-size: 20MB
      max-file-size: 20MB

  jpa:
    properties:
      hibernate:
        default_batch_fetch_size: 100
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: ${DEFAULT_SCHEMA}
    open-in-view: false
    show-sql: false
    hibernate:
      ddl-auto: none
    generate-ddl: false

  data:
    web:
      pageable:
        default-page-size: 10
        one-indexed-parameters: true
    redis:
      host: ${REDIS_HOST}

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USER_NAME}
    password: ${DATASOURCE_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${OAUTH_KAKAO_CLIENT_ID}
            client-secret: ${OAUTH_KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH_KAKAO_REDIRECT_URI}
            admin-key: ${OAUTH_KAKAO_ADMIN_KEY}
            scope:
              - profile_nickname
              - account_email
              - profile_image
          naver:
            client-id: ${OAUTH_NAVER_CLIENT_ID}
            client-secret: ${OAUTH_NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH_NAVER_REDIRECT_URI}
            scope:
              - name
              - email
              - profile_image
          github:
            client-id: ${OAUTH_GITHUB_CLIENT_ID}
            client-secret: ${OAUTH_GITHUB_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH_GITHUB_REDIRECT_URI}
            scope:
              - read:user
              - user:email
        provider:
          kakao:
            authorization-uri: ${OAUTH_PROVIDER_KAKAO_AUTHORIZATION_URI}
            token-uri: ${OAUTH_PROVIDER_KAKAO_TOKEN_URI}
            user-info-uri: ${OAUTH_PROVIDER_KAKAO_USER_INFO_URI}
            user-name-attribute: id
          naver:
            authorization-uri: ${OAUTH_PROVIDER_NAVER_AUTHORIZATION_URI}
            token-uri: ${OAUTH_PROVIDER_NAVER_TOKEN_URI}
            user-info-uri: ${OAUTH_PROVIDER_NAVER_USER_INFO_URI}
            user-name-attribute: response


server:
  servlet:
    encoding:
      charset: UTF-8

security:
  aes:
    encrypt-key: ${AES_ENCRYPT_KEY}
  jwt:
    secret-key: ${JWT_SECRET_KEY}
    access-expiration-time: ${JWT_ACCESS_EXPIRATION_TIME}
    refresh-expiration-time: ${JWT_REFRESH_EXPIRATION_TIME}
  hash-ids:
    salt: ${HASH_IDS_SALT}
    min-length: ${HASH_IDS_MIN_LENGTH}
  admin-key: ${HASH_IDS_ADMIN_KEY}

cloud:
  aws:
    s3:
      credentials:
        accessKey: ${S3_ACCESS_KEY}
        secretKey: ${S3_SECRET_KEY}
      bucket: ${S3_BUCKET}
    stack:
      auto: false
    region:
      static: ap-northeast-2

application:
  s3:
    poll-items:
      location: "poll-items"
    profile-images:
      location: "profile-images"
    background-images:
      location: "background-images"
  discord:
    webhook:
      url: ${DISCORD_WEBHOOK_URL}

scheduler:
  pool-size: 2