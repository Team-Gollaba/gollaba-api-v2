spring:
  servlet:
    multipart:
      max-request-size: 20MB
      max-file-size: 20MB

  jpa:
    properties:
      hibernate:
        default_batch_fetch_size: 100
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: ${DEFAULT_SCHEMA}
    open-in-view: false
    show-sql: false
    hibernate:
      ddl-auto: none
    generate-ddl: false

  data:
    web:
      pageable:
        default-page-size: 10
    redis:
      host: ${REDIS_HOST}

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USER_NAME}
    password: ${DATASOURCE_PASSWORD}
    hikari:
      schema: ${DEFAULT_SCHEMA}
      pool-name: gollaba-HikariPool
      maximum-pool-size: 3
      connection-timeout: 10000
      max-lifetime: 90000
      data-source-properties:
        socketTimeout: 10000
        prepStmtCacheSize: 100
        prepStmtCacheSqlLimit: 250
        cachePrepStmts: true
        useServerPrepStmts: true
        rewriteBatchedStatements: false
        useSsl: false

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            client-id: ${OAUTH_KAKAO_CLIENT_ID}
            client-secret: ${OAUTH_KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH_KAKAO_REDIRECT_URI}
            admin-key: ${OAUTH_KAKAO_ADMIN_KEY}
            scope:
              - profile_nickname
              - account_email
              - profile_image
          naver:
            client-name: naver
            client-id: ${OAUTH_NAVER_CLIENT_ID}
            client-secret: ${OAUTH_NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH_NAVER_REDIRECT_URI}
            scope:
              - name
              - email
              - profile_image
          github:
            client-name: github
            client-id: ${OAUTH_GITHUB_CLIENT_ID}
            client-secret: ${OAUTH_GITHUB_CLIENT_SECRET}
            redirect-uri: ${OAUTH_GITHUB_REDIRECT_URI}
            scope:
              - read:user
              - user:email
          apple:
            client-name: apple
            client-id: ${OAUTH_APPLE_CLIENT_ID}
            client-secret: ${OAUTH_APPLE_CLIENT_SECRET}
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH_APPLE_REDIRECT_URI}
            scope:
              - name
              - email
        provider:
          kakao:
            authorization-uri: "https://kauth.kakao.com/oauth/authorize"
            token-uri: "https://kauth.kakao.com/oauth/token"
            user-info-uri: "https://kapi.kakao.com/v2/user/me"
            user-name-attribute: id
          naver:
            authorization-uri: "https://nid.naver.com/oauth2.0/authorize"
            token-uri: "https://nid.naver.com/oauth2.0/token"
            user-info-uri: "https://openapi.naver.com/v1/nid/me"
            user-name-attribute: response
          apple:
            authorization-uri: "https://appleid.apple.com/auth/authorize?scope=name%20email&response_mode=form_post"
            token-uri: "https://appleid.apple.com/auth/token"


server:
  servlet:
    encoding:
      charset: UTF-8

security:
  aes:
    encrypt-key: ${AES_ENCRYPT_KEY}
  jwt:
    secret-key: ${JWT_SECRET_KEY}
    access-expiration-time: ${JWT_ACCESS_EXPIRATION_TIME}
    refresh-expiration-time: ${JWT_REFRESH_EXPIRATION_TIME}
  hash-ids:
    salt: ${HASH_IDS_SALT}
    min-length: ${HASH_IDS_MIN_LENGTH}
  admin-key: ${HASH_IDS_ADMIN_KEY}

cloud:
  aws:
    s3:
      credentials:
        accessKey: ${S3_ACCESS_KEY}
        secretKey: ${S3_SECRET_KEY}
      bucket: ${S3_BUCKET}
    stack:
      auto: false
    region:
      static: ap-northeast-2

application:
  s3:
    poll-items:
      location: "poll-items"
    profile-images:
      location: "profile-images"
    background-images:
      location: "background-images"
  discord:
    webhook:
      url: ${DISCORD_WEBHOOK_URL}

scheduler:
  pool-size: 2

google-apis:
  service-account-credential:
    project-id: ${GOOGLE_CREDENTIALS_PROJECT_ID}
    private-key-id: ${GOOGLE_CREDENTIALS_PRIVATE_KEY_ID}
    private-key: ${GOOGLE_CREDENTIALS_PRIVATE_KEY}
    client-email: ${GOOGLE_CREDENTIALS_CLIENT_EMAIL}
    client-id: ${GOOGLE_CREDENTIALS_CLIENT_ID}
    auth-uri: ${GOOGLE_CREDENTIALS_AUTH_URI}
    token-uri: ${GOOGLE_CREDENTIALS_TOKEN_URI}
    auth-provider-x509-cert-url: ${GOOGLE_CREDENTIALS_AUTH_PROVIDER_X509_CERT_URL}
    client-x509-cert-url: ${GOOGLE_CREDENTIALS_CLIENT_X509_CERT_URL}

apple:
  team-id: ${APPLE_TEAM_ID}
  key-id: ${APPLE_KEY_ID}