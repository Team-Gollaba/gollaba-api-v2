plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id "com.epages.restdocs-api-spec" version "0.17.1"
    id 'java-test-fixtures'
}

group = 'org.tg.gollaba'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
    implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'com.h2database:h2'

    // configuration-processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // logback
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testFixturesCompileOnly 'org.projectlombok:lombok'
    testFixturesAnnotationProcessor 'org.projectlombok:lombok'

    // queryDsl
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // restdocs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'io.rest-assured:spring-mock-mvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.17.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
    testImplementation 'org.springframework.security:spring-security-test'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // rdb
    runtimeOnly 'mysql:mysql-connector-java:8.0.29'

    // S3
    implementation('org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE') {
        exclude group: 'com.google.firebase', module: 'firebase-admin'
        exclude group: 'io.opentelemetry', module: 'opentelemetry-semconv'
    }
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.396'

    // validator
    implementation 'commons-validator:commons-validator:1.7'

    // hashIds
    implementation 'org.hashids:hashids:1.0.3'

    // postgreSQL
    runtimeOnly 'org.postgresql:postgresql'

    // tika
    implementation 'org.apache.tika:tika-core:3.0.0-BETA'

    // firebase
    implementation('com.google.firebase:firebase-admin:9.1.1') {
        exclude group: 'io.opentelemetry', module: 'opentelemetry-semconv'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootJar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

configurations.all {
    resolutionStrategy {
        force 'io.opentelemetry:opentelemetry-api:1.25.0'
    }
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

openapi3 {
    def outputPath = 'src/main/resources/static/api-docs/gollaba'
    mkdir(outputPath)

    servers = [{ url = "https:dev-api.gollaba.app"}, { url = "localhost:8080"}]
    title = "Gollaba API"
    description = "Gollaba API 문서"
    version = "1.0.0"
    format = 'json'

    // /static/docs/open-api-3.0.1.json 생성 → jar 파일만 배포할 예정이기에 build 에 출력
    outputDirectory = outputPath
    outputFileNamePrefix = 'main'
    tagDescriptionsPropertiesFile = 'src/docs/tag-descriptions.yaml'
}
